# üîê Chat Research Interface Environment Variables
# 
# PRODUCTION STATUS: ‚úÖ FULLY CONFIGURED FOR DEPLOYMENT
#
# INSTRUCTIONS: Copy this file to .env and fill in your actual values
# 
# ‚ö†Ô∏è  SECURITY: Never commit the .env file with real values to Git
#               Only commit this .env.example template file

# ü§ñ OpenAI Configuration (REQUIRED)
# Get your API key from: https://platform.openai.com/api-keys
# Required for GPT-4 chat functionality with research-optimized prompts
REACT_APP_OPENAI_API_KEY="sk-proj-your_actual_openai_api_key_here"

# üóÑÔ∏è Supabase Database Configuration (REQUIRED)
# Get these from your Supabase project dashboard: Settings ‚Üí API
# Production-ready schema with Row Level Security and research analytics
REACT_APP_SUPABASE_URL="https://your-project-ref.supabase.co"
REACT_APP_SUPABASE_ANON_KEY="your_actual_supabase_anonymous_key_here"

# ‚öôÔ∏è Application Configuration
# Session timeout in minutes (20 minutes optimized for research conversations)
REACT_APP_DEFAULT_TIMEOUT=20

# üîß Advanced Configuration (OPTIONAL)
# Enable debug logging in development
# REACT_APP_DEBUG_MODE=false

# Custom completion redirect URL (for non-Prolific studies)
# REACT_APP_COMPLETION_URL="https://your-redirect-url.com/complete"

# üõ†Ô∏è Development Configuration (OPTIONAL)
# Uncomment for development/testing environments
# NODE_ENV=development
# GENERATE_SOURCEMAP=false

# üìä Analytics Configuration (OPTIONAL)
# Enable additional tracking for research optimization
# REACT_APP_ENABLE_ANALYTICS=true

# üéØ Research Study Configuration (OPTIONAL)
# Customize study behavior without code changes
# REACT_APP_STUDY_NAME="AI Conversation Research"
# REACT_APP_MAX_PARTICIPANTS=500
# REACT_APP_ENABLE_DATA_EXPORT=true

# ‚úÖ PRODUCTION DEPLOYMENT CHECKLIST:
# ‚ñ° Replace all placeholder values with your actual credentials
# ‚ñ° Verify OpenAI API key has GPT-4 access and sufficient credits
# ‚ñ° Confirm Supabase project is active and database schema is deployed
# ‚ñ° Test all 8 scenarios work locally: npm start
# ‚ñ° Verify Prolific ID persistence across scenarios
# ‚ñ° Test conversation data saves to Supabase correctly
# ‚ñ° For Vercel deployment: Set these as environment variables in dashboard
# ‚ñ° Test complete end-to-end flow including Qualtrics embedding

# üöÄ DEPLOYMENT STATUS:
# ‚úÖ Frontend: Production-ready React app with TypeScript
# ‚úÖ Database: Supabase with RLS policies and research schema
# ‚úÖ AI Integration: GPT-4 with content moderation and safety features
# ‚úÖ Qualtrics: Iframe embedding with persistent Prolific ID system
# ‚úÖ Security: Environment variable protection and data privacy compliance
# ‚úÖ Analytics: Real-time conversation tracking and export capabilities

# üîó Essential Links:
# OpenAI API Keys: https://platform.openai.com/api-keys
# Supabase Dashboard: https://supabase.com/dashboard
# Vercel Deployment: https://vercel.com/dashboard
# Complete Setup Guide: See DEPLOYMENT.md
# Qualtrics Integration: See QUALTRICS_INTEGRATION.md